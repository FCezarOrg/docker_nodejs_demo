# This is a basic workflow to help you get started with Actions

name: Deploy to ECR

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: docker_nodejs_demo
        IMAGE_TAG: ${{ ECR_REGISTRY/$ECR_REPOSITORY }}/c2c-trace:${{ github.run_id }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

     - name: Output image digest
      id: output-digest
      run: |
        echo "digest: ${{ steps.build-and-push.outputs.digest }} size:"

    - name: Run Prisma Cloud 
      id: prisma-cloud
      uses: bridgecrewio/checkov-action@master
      env:
       PRISMA_API_URL: https://api4.prismacloud.io
      with:
       api-key: ${{ secrets.BC_API_KEY }}
       use_enforcement_rules: true
       download_external_modules: true
       repo_root_for_plan_enrichment: ./  
